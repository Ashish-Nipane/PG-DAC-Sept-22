/*	Given an array of strings, return the longest common prefix that is shared amongst all strings.	7. Note: you may assume all strings only contain lowercase alphabetical characters.	Ex: Given the following arrays...		["colorado", "color", "cold"], return "col"		["a", "b", "c"], return ""		["spot", "spotty", "spotted"], return "spot"*/import java.util.*;import java.io.*;class LongestCommonPrefix{    static String longestCommonPrefix(String[] S) {        if (S == null || S.length == 0) 			return "";		        for (int i=0; i<S[0].length(); i++){            char c = S[0].charAt(i);            for (int j=1; j<S.length; j ++) {                if ((i==S[j].length()) || (S[j].charAt(i)!=c))					return S[0].substring(0, i);                         }        }        return S[0];    }    public static void main(String args[]) {					String s1[] = {"colorado", "color", "cold"};		for(String s : s1){			System.out.print(s+" ");		}		System.out.println();		String a1 = longestCommonPrefix(s1);		System.out.println("Longest common prefix : "+a1);		System.out.println();				String s2[] = {"a", "b", "c"};		for(String s : s2){			System.out.print(s+" ");		}		System.out.println();		String a2 = longestCommonPrefix(s2);		System.out.println("Longest common prefix : "+a2);		System.out.println();				String s3[] = {"spot", "spotty", "spotted"};		for(String s : s3){			System.out.print(s+" ");		}		System.out.println();		String a3 = longestCommonPrefix(s3);		System.out.println("Longest common prefix : "+a3);		System.out.println();		    }}