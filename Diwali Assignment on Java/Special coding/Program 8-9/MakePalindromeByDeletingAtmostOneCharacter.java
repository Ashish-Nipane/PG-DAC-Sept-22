/*	Given a string and the ability to delete at most one character, return whether or not it can form a palindrome.	9. Note: a palindrome is a sequence of characters that reads the same forwards and backwards.	Ex: Given the following strings...		"abcba", return true		"foobof", return true (remove the first 'o', the second 'o', or 'b')		"abccab", return false*/import java.util.*;class MakePalindromeByDeletingAtmostOneCharacter{	static boolean makePalindrome(String str){		boolean b = isPalindrome(str);		if(b){			return true;		}		else{			StringBuilder sb = new StringBuilder(str);			for (int i=0; i<str.length(); i++){				sb.deleteCharAt(i);				if(isPalindrome(sb.toString())){					return true;				} 				else{					sb.insert(i, str.charAt(i));				}			}			return false;		}	}    static boolean isPalindrome(String str1){		StringBuilder sb1 = new StringBuilder(str1);		sb1.reverse();        return str1.equals(sb1.toString());    }	public static void main(String args[]){		Scanner sc = new Scanner(System.in);		System.out.println("Enter string :");		String str = sc.nextLine();		/*		String str = "foobof";		String str = "abcba";		String str = "abccab";		*/		boolean b1 = makePalindrome(str);		System.out.println(b1);	}}