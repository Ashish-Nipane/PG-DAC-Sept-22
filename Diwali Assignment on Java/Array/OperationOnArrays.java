import java.util.*;class OperationOnArrays{		static void printElement(int arr[]){		System.out.println("Array Elements are : ");		for (int x : arr){			System.out.print(x+" ");		}		System.out.println();	}		static void isArrayElementequal(int arr1[], int arr2[]){		int flag =0;		if (arr1.length == arr2.length){			for (int i=0; i<arr1.length; i++){				if(arr1[i]==arr2[i]){					flag=1;				}				else{					flag=0;					break;				}			}		}		if(flag==1){			System.out.println("Array elements are same and array length is same");		}		else{			System.out.println("Array elements are not same");		}	}		static void findPairWhoseSumGiven(int arr[], int sum){		System.out.println("Pair of element in array whose sum is "+sum+" are");		for (int i=0; i<arr.length; i++){			int a = arr[i];			for(int j=i+1; j<arr.length; j++){				if(a+arr[j]==sum){					System.out.print("["+a+","+arr[j]+"] ");				}			}		}		System.out.println();	}		static void reverseArrayElements(int arr[]){		for(int i=0,j=arr.length-1; i<arr.length; i++,j--){			if(i<j){				int temp = arr[i];				arr[i] = arr[j];				arr[j] = temp;			}else{				break;			}		}	}		static void largestElement(int arr[]){		int a=arr[0];		for(int i=0; i<arr.length; i++){			if(a<arr[i]){				a=arr[i];			}		}		System.out.println(a);	}	static void smallestElement(int arr[]){		int a=arr[0];		for(int i=0; i<arr.length; i++){			if(a>arr[i]){				a=arr[i];			}		}		System.out.println(a);	}		static void thirdLargestElement(int arr[]){		for(int i=0; i<arr.length; i++){			for (int j=i+1; j<arr.length; j++){				if(arr[i]>arr[j]){					int temp = arr[i];					arr[i] = arr[j];					arr[j] = temp;				}			}		}		System.out.println(arr[arr.length-3]);	}		static void mergeTwoArrays(int arr1[], int arr2[], int mergearr[]){		int k=0;		for(int i=0; i<arr1.length; i++){			mergearr[k++]= arr1[i];		}		for(int i=0; i<arr2.length; i++){			mergearr[k++]= arr2[i];		}	}		static void averageOfThreeConsecutiveInteger(int arr[]){		if(arr.length>=3){			System.out.println("Average Of Three Consecutive Element in array is ");			for(int i=0; i<arr.length; i++){				int k=i+2;				if(k<arr.length){					int avg = (arr[i]+arr[i+1]+arr[k])/3;					System.out.print(avg+" ");				}				else{					break;				}			}			System.out.println();		}	}		static void elementsInArrayInWhichOrder(int arr[]){		int ascending = 0;		int descending = 0;		for(int i=0; i<arr.length-1; i++){			int j=i+1;			if(arr[i]<arr[j]){				ascending = 1;			}			else{				ascending=0;				break;			}		}		if(ascending==1){			System.out.println("Ascending");		}		else{			for(int i=0; i<arr.length-1; i++){				int j=i+1;				if(arr[i]>arr[j]){					descending = 1;				}				else{					descending=0;					break;				}			}		}		if(descending==1){			System.out.println("Descending");		}		else if (ascending==0 && descending==0){			System.out.println("Random");		}	}		static void sortArrayElement(int arr[]){		for(int i=0; i<arr.length-1; i++){			for(int j=i+1; j<arr.length; j++){				if(arr[i]>arr[j]){					int temp = arr[i];					arr[i] = arr[j];					arr[j] = temp;				}			}		}	}		static void findIntersectionElements(int arr1[],int arr2[]){		int k=0;		for(int i=0; i<arr1.length; i++){			for (int j=0; j<arr2.length; j++){				if(arr1[i]==arr2[j]){					System.out.print(arr1[i]+" ");					break;				}			}		}		System.out.println();	}		static void duplicateElements(int arr[]){		int flag =0;		for (int i=0; i<arr.length-1; i++){			for(int j=i+1; j<arr.length; j++){				if(arr[i]==arr[j]){					System.out.print(arr[i]+" ");					flag=1;					break;				}			}		}		if(flag==0){			System.out.println("No duplicate element");		}		System.out.println();	}		static int sumOfArrayElements(int arr[]){		int sum=0;		for (int i=0; i<arr.length; i++){			sum+=arr[i];		}		return sum;	}		static void findNonZeroElements(int arr[]){		for (int i=0; i<arr.length; i++){			if(arr[i]!=0){				System.out.print(arr[i]+" ");			}		}		System.out.println();	}		static void missingElement(int arr[]){		int k=1;		for(int j=0; j<=arr.length; j++){			if(j<arr.length){				for(int i=k; i<=100; i++){					if(arr[j]==i){						k=arr[j]+1;						break;					}					else						System.out.print(i+" ");				}			}else{				for(int l=arr[arr.length-1]; l<=100; l++){					System.out.print(l+" ");				}			}		}			}		public static void main(String args[]){		//Write a program to print elements of Array ?		int arr[] = {1,2,3,4,5,6,7,8,9};		printElement(arr);		System.out.println();				//Write a Java program to check the equality of two arrays?		int arr1[] = {1,2,3,4,5,6,7,8,9};		int arr2[] = {1,2,3,4,5,6,7,8,9};				printElement(arr1);		printElement(arr2);				isArrayElementequal(arr1,arr2);		System.out.println();				//Write a Java program to find all pairs of elements in an integer array whose sum is equal to a given number?		int arr3[] = {1,2,3,4,5,6,7,8,9};		int sum = 12;				findPairWhoseSumGiven(arr3,sum);		System.out.println();				//Write a program to reverse an Array in java .		int arr4[] = {1,2,3,4,5,6,7,8,9};		System.out.println("Before reverse elements in array");		printElement(arr4);		reverseArrayElements(arr4);		System.out.println("After reverse elements in array");		printElement(arr4);		System.out.println();				//Find out smallest and largest number in a given Array?		int arr5[] = {1,2,3,4,5,6,7,8,9};		printElement(arr5);		System.out.println("Largest element in array is");		largestElement(arr5);		System.out.println("Smallest element in array is");		smallestElement(arr5);		System.out.println();				/*Print the third-largest number in an array without sorting it		Input: [ 24,54,31,16,82,45,67]		Output: 54 (82 and 67 are the largest and second-largest)*/		int arr6[] = {24,54,31,16,82,45,67};		printElement(arr6);		System.out.println("Third largest element is");		thirdLargestElement(arr6);		System.out.println();				/*Write a program to merge two arrays of integers by reading one number at a time from each array until one of the array is exhausted, and then concatenating the remaining numbers.		Input: [23,60,94,3,102] and [42,16,74]		Output: [23,42,60,16,94,74,3,102]*/		int arr7[] = {23,60,94,3,102};		int n1 = arr7.length;		printElement(arr7);		int arr8[] = {42,16,74};		printElement(arr8);		int n2 = arr8.length;		int mergearr[] = new int[n1+n2];		System.out.println("After merging two array");		mergeTwoArrays(arr7,arr8,mergearr);		printElement(mergearr);		System.out.println();				/*Write a program which takes an array of integers and prints the running average of 3 consecutive integers.In case the array has fewer than 3 integers, there should be no output.		Input: [5,14,35,89,140]		Output: [18, 46, 88]		(Explanation: 18=(5+14+35/3, 46=(14+35+89)/3, ...)*/		int arr9[] = {5,14,35,89,140};		printElement(arr9);		averageOfThreeConsecutiveInteger(arr9);		System.out.println();				//Write a program which generates the series 1,4,27,16,125,36		int a = 6;		System.out.println("Generating series");		for (int i=1; i<=a; i++){			if(i%2==0){				System.out.print(i*i+" ");			}			else{				System.out.print(i*i*i+" ");			}		}		System.out.println();						/*Given an array of integers, print whether the numbers are in ascending order or in descending order or in random order without sorting		Input: [5,14,35,90,139] Output: Ascending		Input: [88,67,35,14,-12] Output: Descending		Input: [65,14,129,34,7] Output: Random*/		int arr10[] = {5,14,35,90,139};		int arr11[] = {88,67,35,14,-12};		int arr12[] = {65,14,129,34,7};		printElement(arr10);		elementsInArrayInWhichOrder(arr10);		printElement(arr11);		elementsInArrayInWhichOrder(arr11);		printElement(arr12);		elementsInArrayInWhichOrder(arr12);		System.out.println();				//How to convert a byte array to String?		//byte bytes[] = "hello world".getBytes();		byte bytes1[] = {65,66,67,68,69,70};		System.out.println("Byte array elements");		for(byte b : bytes1){			System.out.print(b+" ");		}		//String s = new String(bytes);     		System.out.println();		System.out.println("Corresponding byte elements to string");		String s = new String(bytes1);     		System.out.println(s);		System.out.println();				//Write a program to sort an Array in Java ?		int arr13[] = {65,14,129,34,7};		System.out.println("Before Sorting");		printElement(arr13);		sortArrayElement(arr13);		System.out.println("After Sorting");		printElement(arr13);		System.out.println();				//Write a program to check whether two given Arrays are equal, given both contains same data type and same length ?		int arr14[] = {65,14,129,34,7};		int arr15[] = {6,14,12,34,7};		int arr16[] = {65,14,129,34,7};		printElement(arr14);		printElement(arr15);		isArrayElementequal(arr14,arr15);		printElement(arr14);		printElement(arr16);		isArrayElementequal(arr14,arr16);		System.out.println();				//How to find the missing number in a given Array from number 1 to 100 ?		int arr22[] = {1,24,22,4,5,46,7,80,9};		sortArrayElement(arr22);		printElement(arr22);		System.out.println("Missing element in array are ");		missingElement(arr22);		System.out.println();						//Given two arrays, find the intersection between them?		int arr17[] = {16,14,12,34,70};		int arr18[] = {14,16,70,30};		printElement(arr17);		printElement(arr18);		System.out.println("Intersection elements are ");		findIntersectionElements(arr17,arr18);		System.out.println();				//Find the missing number in an Array between 1 to 100. Given only one number is missing		int arr26[] = new int[100];		for(int i=0; i<arr26.length; i++){			if(i==25){				arr26[i]=0;//at 25th position element is zero				continue;			}			arr26[i]=i+1;		}		printElement(arr26);		int tsum = (arr26.length)*(arr26.length+1)/2;		int arrsum = sumOfArrayElements(arr26);		int miss = tsum - arrsum;		System.out.println("Missing elements is "+miss);		System.out.println();				//How to find duplicate elements in a given Array		int arr19[] = {1,3,2,8,1,9,5,4,7,9};		printElement(arr19);		System.out.println("Duplicate Elements are");		duplicateElements(arr19);		System.out.println();				//Write a program to sum all the values of a given Array in java?		int arr20[] = {1,3,2,8,1,9,5,4,7,9};		printElement(arr20);		int sum1 = sumOfArrayElements(arr20);		System.out.println("Sum of array elements is "+sum1);		System.out.println();				//How do you separate zeros and non-zeros in a given Array in java?		int arr21[] = {13,0,22,0,14,70,9};		printElement(arr21);		System.out.println("Non-Zero element in array are");		findNonZeroElements(arr21);		System.out.println();				//How to convert Array to ArrayList in java ?        int arr23[] = {13,3,22,5,14,70,9};		printElement(arr23);        List<Integer> l = new ArrayList<Integer>();        // Array to ArrayList Conversion        for (int a1 : arr23){            l.add(a1);		}		System.out.println("Array List element are");        System.out.println(l);		System.out.println();				//How to convert Array to TreeSet in java ?		int arr24[] = {13,3,22,5,14,70,9};		printElement(arr24);        TreeSet<Integer> t = new TreeSet<Integer>();        // Array to treeset Conversion        for (int a1 : arr24){            t.add(a1);		}		System.out.println("Tree Set element are");        System.out.println(t);//gives tree set o/p as sorted array		System.out.println();				//How to convert ArrayList to String Array in java ?		ArrayList<String> list1 = new ArrayList<String>();        // adding elements to list        list1.add("Ashish");        list1.add("Ashutosh");        list1.add("Atharv");        list1.add("Bhushan");		System.out.println("Array list elements are");		System.out.println(list1);		//System.out.println();        String str[] = new String[list1.size()];        for (int i = 0; i < list1.size(); i++) {            str[i] = list1.get(i);        }		System.out.println("String array Elements are");        // Printing using for each loop        for (String k : str) {            System.out.print(k+" ");        }		System.out.println();		System.out.println();				//Write a program to find second largest element in a given Array in java?		int arr25[] = {13,3,22,5,14,70,9};		printElement(arr25);		sortArrayElement(arr25);		System.out.println("Second largest element in array is "+arr25[arr25.length-2]);		System.out.println();									}}