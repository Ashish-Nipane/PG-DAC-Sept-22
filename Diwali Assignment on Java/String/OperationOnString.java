import java.util.Arrays;class OperationOnString{		static void findDuplicateCharacter(String str){		char c[] = str.toCharArray();		for(int i=0; i<str.length()-1; i++){			for(int j=i+1; j<str.length(); j++){				if(c[i] == c[j]){					System.out.print(c[j]+" ");					break;				}			}		}	}		static void checkAnagram(String str1, String str2){		if(str1.length() == str2.length()){			char c1[] = str1.toCharArray();			char c2[] = str2.toCharArray();						Arrays.sort(c1);			Arrays.sort(c2);			int flag = 0;			for(int i=0, j=0; i<c1.length; i++,j++){				if(c1[i]==c2[j]){					flag=1;				}				else{					flag=0;					break;				}			}			if(flag==1){				System.out.println("Anagram");			}			else{				System.out.println("Not Anagram");			}		}		else{			System.out.println("Not Anagram");		}	}		static void findFirstNonRepeatedCharacter(String str){		int flag=0;		int f;		int i;		for(i=0; i<str.length(); i++){			char c = str.charAt(i);			flag=0;			for(int j=i+1; j<str.length(); j++){				if(c==str.charAt(j)){					flag = 1;					break;				}			}			if(flag==0){				break;			}		}		if(flag == 0){			System.out.println("First non-repeated character in string "+str+" is "+str.charAt(i));			}	}		static boolean isStringContainsOnlyDigit(String str){		int n = str.length();		for(int i=0; i<n; i++){			if(str.charAt(i) < '0' || str.charAt(i) > '9'){				return false;			}		}		return true;	}		static void findDuplicateCharacterWithCount(String str){		char c[] = str.toCharArray();		for(int i=0; i<str.length()-1; i++){			int count = 1;			for(int j=i+1; j<str.length(); j++){				if(c[i] == c[j]){					count++;				}			}			if(count > 1){				System.out.println(c[i]+" : "+count);			}		}	}		static void findOccuranceOfCharacter(String str, char c){		int count = 0;		for(int i=0; i<str.length(); i++){			if(str.charAt(i) == c){				count++;			}		}		System.out.println(count);	}		static void replaceCharacter(String str, char toreplace, String withreplace){		String str1 = "";		for(int i=0; i<str.length(); i++){			if(str.charAt(i)==toreplace){				str1+= withreplace;			}			else				str1+=str.charAt(i);		}		System.out.println("\""+str1+"\"");	}		static void printPermutation(String str, String ans){        if (str.length() == 0){//if string empty			System.out.println(ans);			return;        }        for (int i=0; i<str.length(); i++){			char ch = str.charAt(i);			String temp = str.substring(0,i)+str.substring(i+1);			printPermutation(temp,ans+ch);        }    }		static void reverseWordInSentense(String str){		String ch[] = str.split("\\s");		String rstr = "";		for (int i=0; i<ch.length; i++){ 			if (i == ch.length-1){				rstr = ch[i] + rstr;			}			else{				rstr = " " + ch[i] + rstr;			}		}		System.out.print(rstr);	}		static void removeDuplicateCharacter(String str){		String str1 = new String();		int n = str.length();		for(int i=0; i<n; i++){			char c = str.charAt(i);			if(str1.indexOf(c) < 0){				str1 += c;			}		}		System.out.println(str1);	}		static boolean checkStringshuffle(String first, String second, String third){		if (third == null ){ // if string to be check, itself is null then we have to return false			return (first == null && second == null);		}		if (second == null || second.length() == 0){//if one string is null then check if another string is equal to third			return (first.equals(third));		}		if (first == null || first.length() == 0){			return second.equals(third);		}		for (int i=0; i<third.length(); i++){//for other conditions run for loop till third string length 			/*if (first.length() == 0 && second.length() == 0){//check if first & second string length is zero, if zero then return false 				return false;			}*/						if (third.charAt(i) == first.charAt(0)){				if(first.length() == 1){					first = " ";				} 				else{					first = first.substring(1);				}			} 			else if(third.charAt(i) == second.charAt(0)){				if (second.length() == 1) {					second = " ";				} 				else{					second = second.substring(1);				}			} 			else{				return false;			}		}		return true;	}		static void getLongestPalindrome(String str){		int n = str.length();		int index = -1;		int p = 0;		for (int i=0; i<n; i++) {			for (int j=i; j<n; j++) {				int x = 1;				for (int k=i; k<=j; k++) {					if (str.charAt(k) != str.charAt(j-(k-i))){						x = 0;					}				}				if (x == 1 && (j-i+1) > p) {					index = i;					p = j-i+1;				}			}		}		String ans = "";		for (int i=index; i<(index+p); i++) {			ans += str.charAt(i);		}		System.out.println(ans);	}		static void checkHighestOccuredCharacter(String str){		char x='x';		int count2 = 0;		for(int i=0; i<str.length(); i++){			int count1 = 0;			char c = str.charAt(i);			for(int j=0; j<str.length(); j++){				if(c == str.charAt(j)){					count1++;				}			}			//count2 = count1;			if(count1 > count2){				x = str.charAt(i);				count2 = count1;			}		}		System.out.println(x);	}		static void sortString(String str[]){ 		int size =str.length;    		for(int i=0; i<size-1; i++){			for (int j=i+1; j<size; j++){  				if(str[i].compareTo(str[j])>0){  					String temp = str[i];  					str[i] = str[j];  					str[j] = temp;				}  			}  		}    		System.out.println(Arrays.toString(str));    	}		static boolean isPalindrome(String str){		int size = str.length();		String lowerStr = str.toLowerCase();		int left = 0;		int right = size-1;		while(right >= left){			if(lowerStr.charAt(right) == lowerStr.charAt(left)){				right--;				left++;			}			else if(!Character.isLetter(lowerStr.charAt(right))) {				right--;			}			else if(!Character.isLetter(lowerStr.charAt(left))){				left++;			} 			else{				return false;			}		}		return true;	}		public static void main(String args[]){		//How to Print duplicate characters from String?		String str1 = "CDAC MUMBAI";		System.out.println("Duplicate character in "+str1);		findDuplicateCharacter(str1);		System.out.println();				//For eg, if String is "Java" then the program should print "a"		String str2 = "Java";		System.out.println("Duplicate character in "+str2);		findDuplicateCharacter(str2);		System.out.println();		System.out.println();				//How to check if two Strings are anagrams of each other?		String str3 = "Race";		String str4 = "Care";		System.out.print("String \""+str3+"\" and \""+str4+"\" is ");		str3 = str3.toLowerCase();		str4 = str4.toLowerCase();		checkAnagram(str3,str4);		System.out.println();				//How to program to print the first non repeated character from String?		String str5 = "abcdsabca";		findFirstNonRepeatedCharacter(str5);		System.out.println();				//How to check if a String contains only digits?		String str6 = "12abc12";		String str7 = "1212";		boolean b1 = isStringContainsOnlyDigit(str6);		boolean b2 = isStringContainsOnlyDigit(str7);		System.out.println("\""+str6+"\" this string contains all digit : "+ b1);		System.out.println("\""+str7+"\" this string contains all digit : "+ b2);		System.out.println();				//How to find duplicate characters in a String?		String str8 = "abcdsbca";		System.out.println("Duplicate character in string \""+str8+"\" is");		findDuplicateCharacter(str8);		System.out.println();		System.out.println();				/*You need to write a program to print all duplicate character and their count in Java. For example, if given String is "Programming" then your program should print		g : 2		r : 2		m : 2											*/		String str9 = "Programming";		System.out.println("Duplicate chatacter in \""+str9+"\"");		findDuplicateCharacterWithCount(str9);		System.out.println();				//How to count the occurrence of a given character in String?		String str10 = "abccdefgaa";		char c = 'a';		System.out.print("In \""+str10+"\" string occurance of character \""+c+"\" is ");		findOccuranceOfCharacter(str10,c);		System.out.println();				//How to convert numeric String to an int?		String str11 = "121";		int num = Integer.parseInt(str11);		System.out.println("String \""+str11+"\" converted to numeric value "+num);		System.out.println();				//For example, if you pass "67263" to the program then it should return 67263.		String str12 = "67263";		int num1 = Integer.parseInt(str12);		System.out.println("String \""+str12+"\" converted to numeric value "+num1);		System.out.println(); 				//How to replace each given character to other e.g. blank with %20?		String str13 = "Java is Great";		char toreplace = 'a';		String withreplace = "%20";		System.out.println("want to replace character \""+toreplace+"\" with \""+withreplace+"\" in string \""+str13+"\"");		replaceCharacter(str13,toreplace,withreplace);		System.out.println();				//For example, if the input is "Java is Great" and asked to replace space with %20 then it should be "Java%20is%20Great".		String str14 = "Java is Great";		toreplace = ' ';		withreplace = "%20";		System.out.println("want to replace character \""+toreplace+"\" with \""+withreplace+"\" in string \""+str13+"\"");		replaceCharacter(str13,toreplace,withreplace);		System.out.println();				//How to find all permutations of String?		String str15 = "abc";		System.out.println("Premutation for \""+str15+"\"");		printPermutation(str15,"");		System.out.println();				//How to reverse words in a sentence without using a library method?		String str16 = "Java is Great";		System.out.println("Before reversing words, string is \""+str16+"\"");		System.out.print("After reverse : ");		reverseWordInSentense(str16);		System.out.println();		System.out.println();				//How to remove duplicate characters from String?		String str17 = "Javaisgreat";		System.out.print("After remove duplicate character from \""+str17+"\" resultant string is ");		removeDuplicateCharacter(str17);		System.out.println();				//For example, if the input is ‘bananas’ the output will be ‘bans’.		String str18 = "bananas";		System.out.print("After remove duplicate character from \""+str18+"\" resultant string is ");		removeDuplicateCharacter(str18);		System.out.println();				//How to check if a String is a valid shuffle of two String?		//For example, given first = "abc" and second = "def", third = "dabecf" is a valid shuffle since it preserves the character ordering of the two strings.				String first = "abc";		String second = "def";		String third = "dabecf"; //check  while taking c before b as 		//String third = "dacbef"; // it gives not valid suffle as c encounterred befor b		boolean b = checkStringshuffle(first,second,third);		if(b){			System.out.println("String \""+third+"\" is valid suffle of string \""+first+"\" and \""+second+"\"");		}		else{			System.out.println("String \""+third+"\" is not valid suffle of string \""+first+"\" and \""+second+"\"");		}		System.out.println();				//How to return the highest occurred character in a String?		//For e.g. if input is "aaaaaaaaaaaaaaaaabbbbcddddeeeeee" it should return "a".		String str19 = "aaaaaaaaaaaaaaaaabbbbcddddeeeeee";		System.out.print("highest occurred character in a String \""+str19+"\" is : ");		checkHighestOccuredCharacter(str19);		System.out.println();				//Write a program to remove a given character from String?		//You need to write a Java method that will accept a String and a character to be removed and return a String, which doesn't has that character e.g remove(String word, char ch).		String str20 = "Java";		char p = 'a';		String s = "";		System.out.println("want to replace character \""+p+"\" in string \""+str20+"\"");		replaceCharacter(str20,p,s);		System.out.println();				//Write a program to find the longest palindrome in a string?		String str21 = "forgeeksskeegfor";		System.out.print("Longest palindrome in string \""+str21+"\" is ");		getLongestPalindrome(str21);		System.out.println();				//How to sort String on their length in Java?		//Write a Program to sort String on their length in Java? Your method should accept an array of String and return a sorted array based upon the length of String. Don't forget to write unit tests for your solution.		String[] str22 = {"Zimbabwe","South-Africa","India","America","Yugoslavia","Denmark","France","Netherlands","Italy","Germany"};		System.out.println("Before sorting");		System.out.println(Arrays.toString(str22));		System.out.println("After sorting");		sortString(str22);		System.out.println();				//		String str23 = "A man, a plan, a canal: Panama";		String str24 = "race a car";		boolean b3 = isPalindrome(str23);		if(b3){			System.out.println("String \""+str23+"\" is palindrome");		}		else{			System.out.println("String \""+str23+"\" is not palindrome");		}				boolean b4 = isPalindrome(str24);		if(b4){			System.out.println("String \""+str24+"\" is palindrome");		}		else{			System.out.println("String \""+str24+"\" is not palindrome");		}			}}